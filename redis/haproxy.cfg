#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

listen  stats
        bind   192.168.1.219:81
        mode            http
        log             global
        stats enable
        stats hide-version
        stats refresh 30s
        stats show-node
        stats auth admin:admin
        stats uri  /haproxy?stats
#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
#frontend  main *:5000
#    acl url_static       path_beg       -i /static /images /javascript /stylesheets
#    acl url_static       path_end       -i .jpg .gif .png .css .js

#    use_backend static          if url_static
#    default_backend             app

frontend nginx
    bind *:80
    mode http
    default_backend nginx

frontend tomcat
    bind *:8080
    mode http
    default_backend tomcat

frontend open
    bind *:8000
    mode http
    default_backend open

frontend redis
    bind *:6379
    option tcplog
    mode tcp
    default_backend redis_cache

frontend elasticsearch
    bind *:9200
    mode http
    default_backend es

frontend camunda
    bind *:8082
    mode http
    default_backend camunda

frontend minio
    bind *:9000
    mode http
    default_backend minio

frontend nifi
    bind *:9090
    mode http
    default_backend nifi

frontend eureka
    bind *:88
    mode http
    default_backend eureka

#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
backend nginx
    balance     roundrobin
    server sv1 192.168.1.218:30178 check
    server sv2 192.168.1.220:30178 check

backend tomcat
    balance     roundrobin
    server tom1 192.168.1.218:30010 check
    server tom2 192.168.1.220:30010 check
    server tom3 192.168.1.219:30010 check

backend open
    balance     roundrobin
    server open1 192.168.1.218:31297 check
    server open2 192.168.1.220:31297 check

backend es
    balance     roundrobin
    server es1  192.168.1.218:30001 check
    server es2  192.168.1.220:30001 check
    server es3  192.168.1.219:30001 check

backend camunda
    mode http
    maxconn 40000
    balance roundrobin
    option http-keep-alive
    option forwardfor
    cookie SRVNAME insert
    timeout connect  30000
    timeout client  30000
    timeout server 30000
    server ca1  192.168.1.218:30020 cookie ca1 check
    server ca2  192.168.1.220:30020 cookie ca2 check

backend minio
    balance     roundrobin
    server mi1  192.168.1.218:30005 check
    server mi2  192.168.1.220:30005 check
    server mi3  192.168.1.219:30005 check

backend eureka
    balance     roundrobin
    server eu1  192.168.1.218:30030 check
    server eu2  192.168.1.220:30030 check

backend nifi
    balance     roundrobin
    server ni1  192.168.1.219:30015 check

backend redis_cache
    mode tcp
    option tcplog
    option tcp-check
    tcp-check send AUTH\ redis1234\r\n
    tcp-check send PING\r\n
    tcp-check expect string +PONG
    tcp-check send info\ replication\r\n
    tcp-check expect string role:master
    tcp-check send QUIT\r\n
    tcp-check expect string +OK
    server redis-1 192.168.1.218:31117 maxconn 1024 check inter 1s
    server redis-2 192.168.1.218:30539 maxconn 1024 check inter 1s
    server redis-3 192.168.1.219:31117 maxconn 1024 check inter 1s
    server redis-4 192.168.1.219:30539 maxconn 1024 check inter 1s
    server redis-5 192.168.1.220:31117 maxconn 1024 check inter 1s
    server redis-6 192.168.1.220:30539 maxconn 1024 check inter 1s

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
